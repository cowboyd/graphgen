scalar JSON
scalar JSONObject

interface Node {
  id: ID!
}

interface FieldEntry {
  key: String!
}

type JSONFieldEntry implements FieldEntry {
  key: String!
  json: JSON
  typename: String!
}

type VertexFieldEntry implements FieldEntry {
  key: String!
  id: ID!
  typenames: [String!]!
}

type VertexListFieldEntry implements FieldEntry {
  key: String!
  ids: [ID!]!
  typenames: [String!]!
}

type Vertex implements Node {
  id: ID!
  typename: String!
  fields: [FieldEntry!]!
}

type Reference {
  fieldname: String!
  path: String!
  typename: String!
  description: String!
  affinity: Float
  count: Int!
}

type Type {
  typename: String!
  count: Int!
  references: [Reference!]!
}

type Query {
  meta: [Type]
  graph: JSON
  all(typename: String!): [Vertex!]
  node(id: ID!): Node
}

input CreateInput {
  typename: String!
  preset: JSON
}

type Mutation {
  create(typename: String!, preset: JSON): Vertex
  createMany(inputs: [CreateInput!]!): [Vertex!]!
}