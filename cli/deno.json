{
  "tasks": {
    "test": "deno task build && deno task compile && deno task npm:install:example && deno test --unstable -A",
    "npm:install": "npm install && cd example && npm install",
    "npm:install:example": "npm install && cd example && npm install",
    "build:web": "deno run -A --unstable npm:vite build",
    "build": "npm install && deno task build:web && deno task bundle-assets",
    "build:web:watch": "deno task build:web -- --watch",
    "dev": "deno run -A ./main.ts --watch -f ./example/factory.ts --app-path=./dist",
    "bundle-assets": "deno run -A tasks/bundle-assets.ts dist",
    "build:cli": "deno task build && deno task build:cli:windows && deno task build:cli:linux && deno task build:cli:macos-m1 && deno task build:cli:macos-intel",
    "build:cli:windows": "deno compile --no-check -o build/graphgen-x86_64-pc-windows-msvc.exe --target x86_64-pc-windows-msvc --allow-read --allow-net --allow-env main.ts",
    "build:cli:linux": "deno compile --no-check -o build/graphgen-x86_64-unknown-linux-gnu --target x86_64-unknown-linux-gnu --allow-read --allow-net --allow-env main.ts",
    "build:cli:macos-m1": "deno compile --no-check -o build/graphgen-aarch64-apple-darwin --target aarch64-apple-darwin --allow-read --allow-net --allow-env main.ts",
    "build:cli:macos-intel": "deno compile --no-check -o build/graphgen-x86_64-apple-darwin --target x86_64-apple-darwin --allow-read --allow-net --allow-env main.ts",
    "compile": "deno compile --no-check --allow-read --allow-net --allow-env -o graphgen ./main.ts"
  },
  "lint": {
    "rules": {
      "exclude": ["prefer-const", "require-yield", "no-inner-declarations"]
    },
    "files": {
      "exclude": ["dist", "example", "bundled-assets.js", "node_modules"]
    }
  },
  "fmt": {
    "files": {
      "exclude": ["README.md", "build/", "node_modules", "example", "bundled-assets.js", "dist"]
    }
  },
  "test": {
    "files": {
      "exclude": ["build", "node_modules", "example"]
    }
  },
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "react"
  }
}
